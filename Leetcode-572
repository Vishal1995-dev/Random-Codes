# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def compare(self,node1,node2):
        if(node1==None and node2==None):
            return True
        elif(node1==None or node2==None):
            return False
        if(node1.val==node2.val):
            return self.compare(node1.left,node2.left) and self.compare(node1.right,node2.right)
    
    def isSubtree(self, s, t):
        """
        :type s: TreeNode
        :type t: TreeNode
        :rtype: bool
        """
        if(t==None):
            return True
        if(s==None):
            return False
        return self.compare(s,t) or self.isSubtree(s.left,t) or self.isSubtree(s.right,t)
