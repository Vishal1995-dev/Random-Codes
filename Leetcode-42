#Solution 1
class Solution(object):
    def trap(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        ans=0
        i=0
        while(i<len(height)):
            left_max=0
            right_max=0
            for j in range(0,i):
                left_max=max(left_max,height[j])
            
            for j in range(i+1,len(height)):
                right_max=max(right_max,height[j])
        
            if(min(left_max,right_max)-height[i]>0):
                ans+=min(left_max,right_max)-height[i]
            
            i+=1
        return ans
        
#Solution 2       
class Solution(object):
  def trap(self, height):
      """
      :type height: List[int]
      :rtype: int
      """
      l=len(height)
      if(l==0):
          return 0
      ans=0
      left_max=[0]*l
      right_max=[0]*l
      left_max[0]=height[0]
      right_max[l-1]=height[l-1]
      for i in range(1,l):
          left_max[i]=max(height[i],left_max[i-1])
      for i in range(l-2,-1,-1):
          right_max[i]=max(height[i],right_max[i+1])
      print(left_max,right_max)
      for i in range(1,l-1):
          ans+=min(left_max[i],right_max[i])-height[i]
      return ans
